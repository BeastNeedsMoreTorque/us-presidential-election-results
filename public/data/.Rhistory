# baseline clean up functions by Timo Grossenbacher
# https://timogrossenbacher.ch/2016/12/beautiful-thematic-maps-with-ggplot2-only/
remove(list = ls(all.names = TRUE))
detachAllPackages <- function() {
basic.packages.blank <-  c("stats",
"graphics",
"grDevices",
"utils",
"datasets",
"methods",
"base")
basic.packages <- paste("package:", basic.packages.blank, sep = "")
package.list <- search()[ifelse(unlist(gregexpr("package:", search())) == 1,
TRUE,
FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list) > 0)  for (package in package.list) {
detach(package, character.only = TRUE)
print(paste("package ", package, " detached", sep = ""))
}
}
detachAllPackages()
library(psych) # for describe function
library(ggplot2) # for beautiful graphs
library(car) # for scatterplots correlation matrices
# read expanded County Health Rankings data set
chr <- read.csv("https://raw.githubusercontent.com/tonmcg/us-presidential-election-results/master/public/data/chr.csv")
describe(chr)
boxplot(chr$X..Some.College)
boxplot(chr$Teen.Birth.Rate)
boxplot(chr$Teen.Birth.Rate ~ chr$Teen.Births)
boxplot(chr$Teen.Birth.Rate)
boxplot(Teen.Birth.Rate ~ Teen.Population, data=chr)
boxplot(Teen.Birth.Rate ~ election_result, data=chr)
plot(Teen.Birth.Rate,data=chr)
plot(chr$Teen.Birth.Rate,data=chr)
plot(chr$Teen.Birth.Rate)
plot(chr$Teen.Birth.Rate,election_result,data=chr)
plot(chr$Teen.Birth.Rate,chr$election_result)
plot(chr$election_result,chr$Teen.Birth.Rate)
plot(chr$X..Severe.Housing.Problems,chr$Teen.Birth.Rate)
boxplot(X..Severe.Housing.Problems ~ Teen.Birth.Rate, data=chr)
boxplot(X..Severe.Housing.Problems ~ election_result, data=chr)
View(chr)
newdata <- subset(chr, election_result == '')
View(newdata)
newdata <- subset(chr, election_result <> '')
newdata <- subset(chr, election_result != '')
boxplot(Teen.Birth.Rate ~ election_result, data=chr)
unique(chr$election_result)
unique(newdata$election_result)
newdata <- subset(chr, election_result != ' ')
newdata <- subset(chr, election_result == ' ')
newdata <- subset(chr, election_result == '')
boxplot(Teen.Birth.Rate ~ election_result, data=newdata)
newdata <- subset(chr, election_result != '')
boxplot(Teen.Birth.Rate ~ election_result, data=newdata)
newdata <- subset(chr, State != 'Alaska')
boxplot(Teen.Birth.Rate ~ election_result, data=newdata)
newdata <- subset(chr, election_result != null)
newdata <- subset(chr, election_result != NULL)
newdata <- subset(chr, election_result != NA)
boxplot(Teen.Birth.Rate ~ election_result, data=newdata)
newdata <- subset(chr, election_result != '')
boxplot(Teen.Birth.Rate ~ election_result, data=newdata)
describe(newdata)
boxplot(Single.Parent.Households ~ election_result, data=newdata)
boxplot(X..Single.Parent.Households  ~ election_result, data=newdata)
boxplot(X..Uninsured  ~ election_result, data=newdata)
boxplot(Income.Ratio  ~ election_result, data=newdata)
boxplot(Graduation.Rate  ~ election_result, data=newdata)
describe(mtcars)
data <- read.csv(https://files.osf.io/v1/resources/cknjr/providers/osfstorage/56f47f366c613b01f294b478?action=download&version=1&direct)
data <- read.csv("https://files.osf.io/v1/resources/cknjr/providers/osfstorage/56f47f366c613b01f294b478?action=download&version=1&direct")
View(data)
describe(data)
library(tidyverse)
data <- read.csv("https://raw.githubusercontent.com/Deleetdk/USA.county.data/master/Scrape%20and%20tidy%20code/data/S_counties_data.csv")
describe(data)
hist(data$Less.Than.High.School)
data <- read.csv("https://raw.githubusercontent.com/Deleetdk/USA.county.data/master/Scrape%20and%20tidy%20code/data/S_counties_data.csv")
# baseline clean up functions by Timo Grossenbacher
# https://timogrossenbacher.ch/2016/12/beautiful-thematic-maps-with-ggplot2-only/
remove(list = ls(all.names = TRUE))
detachAllPackages <- function() {
basic.packages.blank <-  c("stats",
"graphics",
"grDevices",
"utils",
"datasets",
"methods",
"base")
basic.packages <- paste("package:", basic.packages.blank, sep = "")
package.list <- search()[ifelse(unlist(gregexpr("package:", search())) == 1,
TRUE,
FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list) > 0)  for (package in package.list) {
detach(package, character.only = TRUE)
print(paste("package ", package, " detached", sep = ""))
}
}
detachAllPackages()
library(psych) # for describe function
library(ggplot2) # for beautiful graphs
library(car) # for scatterplots correlation matrices
# read expanded County Health Rankings data set
chr <- read.csv("https://raw.githubusercontent.com/tonmcg/us-presidential-election-results/master/public/data/chr.csv")
describe(chr)
boxplot(Mixedness  ~ election_result, data=chr)
newdata <- subset(chr,election_result != '')
boxplot(Mixedness  ~ election_result, data=newdata)
boxplot(SIRE_homogeneity  ~ election_result, data=newdata)
boxplot(Graduate.Degree  ~ election_result, data=newdata)
boxplot(Construction.extraction.maintenance.and.repair.occupations  ~ election_result, data=newdata)
boxplot(Production.transportation.and.material.moving.occupations  ~ election_result, data=newdata)
boxplot(Mixedness  ~ election_result, data=newdata)
describe(newdata$Mixedness)
boxplot(Violent.Crime.Rate  ~ election_result, data=newdata)
boxplot(Income.Ratio  ~ election_result, data=newdata)
boxplot(Graduation.Rate  ~ election_result, data=newdata)
# baseline clean up functions by Timo Grossenbacher
# https://timogrossenbacher.ch/2016/12/beautiful-thematic-maps-with-ggplot2-only/
remove(list = ls(all.names = TRUE))
detachAllPackages <- function() {
basic.packages.blank <-  c("stats",
"graphics",
"grDevices",
"utils",
"datasets",
"methods",
"base")
basic.packages <- paste("package:", basic.packages.blank, sep = "")
package.list <- search()[ifelse(unlist(gregexpr("package:", search())) == 1,
TRUE,
FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list) > 0)  for (package in package.list) {
detach(package, character.only = TRUE)
print(paste("package ", package, " detached", sep = ""))
}
}
detachAllPackages()
library(psych) # for describe function
library(ggplot2) # for beautiful graphs
library(car) # for scatterplots correlation matrices
# read expanded County Health Rankings data set
chr <- read.csv("https://raw.githubusercontent.com/tonmcg/us-presidential-election-results/master/public/data/chr.csv")
describe(chr)
boxplot(Household.Income ~ election_result,data=chr)
newdata <- subset(chr,election_result != '')
boxplot(Household.Income ~ election_result,data=newdata)
boxplot(Drug.Overdoes.Mortality.Rate ~ election_result,data=newdata)
boxplot(Drug.Overdose.Mortality.Rate ~ election_result,data=newdata)
ggplot(newdata, aes(x=election_result, y=Drug.Overdoes.Mortality.Rate)) +
geom_boxplot(fill="skyblue")
ggplot(newdata, aes(x=election_result, y=Drug.Overdose.Mortality.Rate)) +
geom_boxplot(fill="skyblue")
ggplot(newdata, aes(x=election_result, y=Household.Income)) +
geom_boxplot(fill="skyblue")
ggplot(newdata, aes(x=election_result, y=Labor.Force)) +
geom_boxplot(fill="skyblue")
ggplot(newdata, aes(x=election_result, y=X..Severe.Housing.Problems)) +
geom_boxplot(fill="skyblue")
describe(newdata)
ggplot(newdata, aes(x=election_result, y=Association.Rate)) +
geom_boxplot(fill="skyblue")
ggplot(newdata, aes(x=election_result, y=Black.White.Segregation.index)) +
geom_boxplot(fill="skyblue")
ggplot(newdata, aes(x=election_result, y=Black.White.Segregation.index)) +
+     geom_boxplot(fill="skyblue")
# baseline clean up functions by Timo Grossenbacher
# https://timogrossenbacher.ch/2016/12/beautiful-thematic-maps-with-ggplot2-only/
remove(list = ls(all.names = TRUE))
detachAllPackages <- function() {
basic.packages.blank <-  c("stats",
"graphics",
"grDevices",
"utils",
"datasets",
"methods",
"base")
basic.packages <- paste("package:", basic.packages.blank, sep = "")
package.list <- search()[ifelse(unlist(gregexpr("package:", search())) == 1,
TRUE,
FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list) > 0)  for (package in package.list) {
detach(package, character.only = TRUE)
print(paste("package ", package, " detached", sep = ""))
}
}
detachAllPackages()
library(psych) # for describe function
library(ggplot2) # for beautiful graphs
library(car) # for scatterplots correlation matrices
# read expanded County Health Rankings data set
chr <- read.csv("https://raw.githubusercontent.com/tonmcg/us-presidential-election-results/master/public/data/chr.csv")
describe(chr)
newdata <- subset(chr,election_result != '')
describe(newdata)
ggplot(newdata, aes(x=election_result, y=Black.White.Segregation.index)) +
+     geom_boxplot(fill="skyblue")
zggplot(newdata, aes(x=election_result, y=Black.White.Segregation.index)) + geom_boxplot(fill="skyblue")
ggplot(newdata, aes(x=election_result, y=Black.White.Segregation.index)) + geom_boxplot(fill="skyblue")
